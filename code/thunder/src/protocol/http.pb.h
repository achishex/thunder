// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: http.proto

#ifndef PROTOBUF_http_2eproto__INCLUDED
#define PROTOBUF_http_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_http_2eproto();
void protobuf_AssignDesc_http_2eproto();
void protobuf_ShutdownFile_http_2eproto();

class HttpMsg;
class HttpMsg_Header;

// ===================================================================

class HttpMsg_Header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HttpMsg.Header) */ {
 public:
  HttpMsg_Header();
  virtual ~HttpMsg_Header();

  HttpMsg_Header(const HttpMsg_Header& from);

  inline HttpMsg_Header& operator=(const HttpMsg_Header& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpMsg_Header& default_instance();

  void Swap(HttpMsg_Header* other);

  // implements Message ----------------------------------------------

  inline HttpMsg_Header* New() const { return New(NULL); }

  HttpMsg_Header* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpMsg_Header& from);
  void MergeFrom(const HttpMsg_Header& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpMsg_Header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string header_name = 1;
  void clear_header_name();
  static const int kHeaderNameFieldNumber = 1;
  const ::std::string& header_name() const;
  void set_header_name(const ::std::string& value);
  void set_header_name(const char* value);
  void set_header_name(const char* value, size_t size);
  ::std::string* mutable_header_name();
  ::std::string* release_header_name();
  void set_allocated_header_name(::std::string* header_name);

  // optional bytes header_value = 2;
  void clear_header_value();
  static const int kHeaderValueFieldNumber = 2;
  const ::std::string& header_value() const;
  void set_header_value(const ::std::string& value);
  void set_header_value(const char* value);
  void set_header_value(const void* value, size_t size);
  ::std::string* mutable_header_value();
  ::std::string* release_header_value();
  void set_allocated_header_value(::std::string* header_value);

  // @@protoc_insertion_point(class_scope:HttpMsg.Header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr header_name_;
  ::google::protobuf::internal::ArenaStringPtr header_value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_http_2eproto();
  friend void protobuf_AssignDesc_http_2eproto();
  friend void protobuf_ShutdownFile_http_2eproto();

  void InitAsDefaultInstance();
  static HttpMsg_Header* default_instance_;
};
// -------------------------------------------------------------------

class HttpMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HttpMsg) */ {
 public:
  HttpMsg();
  virtual ~HttpMsg();

  HttpMsg(const HttpMsg& from);

  inline HttpMsg& operator=(const HttpMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HttpMsg& default_instance();

  void Swap(HttpMsg* other);

  // implements Message ----------------------------------------------

  inline HttpMsg* New() const { return New(NULL); }

  HttpMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HttpMsg& from);
  void MergeFrom(const HttpMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HttpMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef HttpMsg_Header Header;

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 http_major = 2;
  void clear_http_major();
  static const int kHttpMajorFieldNumber = 2;
  ::google::protobuf::int32 http_major() const;
  void set_http_major(::google::protobuf::int32 value);

  // optional int32 http_minor = 3;
  void clear_http_minor();
  static const int kHttpMinorFieldNumber = 3;
  ::google::protobuf::int32 http_minor() const;
  void set_http_minor(::google::protobuf::int32 value);

  // optional int32 content_length = 4;
  void clear_content_length();
  static const int kContentLengthFieldNumber = 4;
  ::google::protobuf::int32 content_length() const;
  void set_content_length(::google::protobuf::int32 value);

  // optional int32 method = 5;
  void clear_method();
  static const int kMethodFieldNumber = 5;
  ::google::protobuf::int32 method() const;
  void set_method(::google::protobuf::int32 value);

  // optional int32 status_code = 6;
  void clear_status_code();
  static const int kStatusCodeFieldNumber = 6;
  ::google::protobuf::int32 status_code() const;
  void set_status_code(::google::protobuf::int32 value);

  // optional int32 encoding = 7;
  void clear_encoding();
  static const int kEncodingFieldNumber = 7;
  ::google::protobuf::int32 encoding() const;
  void set_encoding(::google::protobuf::int32 value);

  // optional string url = 8;
  void clear_url();
  static const int kUrlFieldNumber = 8;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // repeated .HttpMsg.Header headers = 9;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 9;
  const ::HttpMsg_Header& headers(int index) const;
  ::HttpMsg_Header* mutable_headers(int index);
  ::HttpMsg_Header* add_headers();
  ::google::protobuf::RepeatedPtrField< ::HttpMsg_Header >*
      mutable_headers();
  const ::google::protobuf::RepeatedPtrField< ::HttpMsg_Header >&
      headers() const;

  // optional bytes body = 10;
  void clear_body();
  static const int kBodyFieldNumber = 10;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // optional string path = 14;
  void clear_path();
  static const int kPathFieldNumber = 14;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional bool is_decoding = 15;
  void clear_is_decoding();
  static const int kIsDecodingFieldNumber = 15;
  bool is_decoding() const;
  void set_is_decoding(bool value);

  // @@protoc_insertion_point(class_scope:HttpMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 http_major_;
  ::google::protobuf::int32 http_minor_;
  ::google::protobuf::int32 content_length_;
  ::google::protobuf::int32 method_;
  ::google::protobuf::int32 status_code_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::RepeatedPtrField< ::HttpMsg_Header > headers_;
  ::google::protobuf::int32 encoding_;
  bool is_decoding_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_http_2eproto();
  friend void protobuf_AssignDesc_http_2eproto();
  friend void protobuf_ShutdownFile_http_2eproto();

  void InitAsDefaultInstance();
  static HttpMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HttpMsg_Header

// optional string header_name = 1;
inline void HttpMsg_Header::clear_header_name() {
  header_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg_Header::header_name() const {
  // @@protoc_insertion_point(field_get:HttpMsg.Header.header_name)
  return header_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg_Header::set_header_name(const ::std::string& value) {
  
  header_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.Header.header_name)
}
inline void HttpMsg_Header::set_header_name(const char* value) {
  
  header_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.Header.header_name)
}
inline void HttpMsg_Header::set_header_name(const char* value, size_t size) {
  
  header_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.Header.header_name)
}
inline ::std::string* HttpMsg_Header::mutable_header_name() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.Header.header_name)
  return header_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg_Header::release_header_name() {
  // @@protoc_insertion_point(field_release:HttpMsg.Header.header_name)
  
  return header_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg_Header::set_allocated_header_name(::std::string* header_name) {
  if (header_name != NULL) {
    
  } else {
    
  }
  header_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header_name);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.Header.header_name)
}

// optional bytes header_value = 2;
inline void HttpMsg_Header::clear_header_value() {
  header_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg_Header::header_value() const {
  // @@protoc_insertion_point(field_get:HttpMsg.Header.header_value)
  return header_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg_Header::set_header_value(const ::std::string& value) {
  
  header_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.Header.header_value)
}
inline void HttpMsg_Header::set_header_value(const char* value) {
  
  header_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.Header.header_value)
}
inline void HttpMsg_Header::set_header_value(const void* value, size_t size) {
  
  header_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.Header.header_value)
}
inline ::std::string* HttpMsg_Header::mutable_header_value() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.Header.header_value)
  return header_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg_Header::release_header_value() {
  // @@protoc_insertion_point(field_release:HttpMsg.Header.header_value)
  
  return header_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg_Header::set_allocated_header_value(::std::string* header_value) {
  if (header_value != NULL) {
    
  } else {
    
  }
  header_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header_value);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.Header.header_value)
}

// -------------------------------------------------------------------

// HttpMsg

// optional int32 type = 1;
inline void HttpMsg::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::type() const {
  // @@protoc_insertion_point(field_get:HttpMsg.type)
  return type_;
}
inline void HttpMsg::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.type)
}

// optional int32 http_major = 2;
inline void HttpMsg::clear_http_major() {
  http_major_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::http_major() const {
  // @@protoc_insertion_point(field_get:HttpMsg.http_major)
  return http_major_;
}
inline void HttpMsg::set_http_major(::google::protobuf::int32 value) {
  
  http_major_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.http_major)
}

// optional int32 http_minor = 3;
inline void HttpMsg::clear_http_minor() {
  http_minor_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::http_minor() const {
  // @@protoc_insertion_point(field_get:HttpMsg.http_minor)
  return http_minor_;
}
inline void HttpMsg::set_http_minor(::google::protobuf::int32 value) {
  
  http_minor_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.http_minor)
}

// optional int32 content_length = 4;
inline void HttpMsg::clear_content_length() {
  content_length_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::content_length() const {
  // @@protoc_insertion_point(field_get:HttpMsg.content_length)
  return content_length_;
}
inline void HttpMsg::set_content_length(::google::protobuf::int32 value) {
  
  content_length_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.content_length)
}

// optional int32 method = 5;
inline void HttpMsg::clear_method() {
  method_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::method() const {
  // @@protoc_insertion_point(field_get:HttpMsg.method)
  return method_;
}
inline void HttpMsg::set_method(::google::protobuf::int32 value) {
  
  method_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.method)
}

// optional int32 status_code = 6;
inline void HttpMsg::clear_status_code() {
  status_code_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::status_code() const {
  // @@protoc_insertion_point(field_get:HttpMsg.status_code)
  return status_code_;
}
inline void HttpMsg::set_status_code(::google::protobuf::int32 value) {
  
  status_code_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.status_code)
}

// optional int32 encoding = 7;
inline void HttpMsg::clear_encoding() {
  encoding_ = 0;
}
inline ::google::protobuf::int32 HttpMsg::encoding() const {
  // @@protoc_insertion_point(field_get:HttpMsg.encoding)
  return encoding_;
}
inline void HttpMsg::set_encoding(::google::protobuf::int32 value) {
  
  encoding_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.encoding)
}

// optional string url = 8;
inline void HttpMsg::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg::url() const {
  // @@protoc_insertion_point(field_get:HttpMsg.url)
  return url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.url)
}
inline void HttpMsg::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.url)
}
inline void HttpMsg::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.url)
}
inline ::std::string* HttpMsg::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg::release_url() {
  // @@protoc_insertion_point(field_release:HttpMsg.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.url)
}

// repeated .HttpMsg.Header headers = 9;
inline int HttpMsg::headers_size() const {
  return headers_.size();
}
inline void HttpMsg::clear_headers() {
  headers_.Clear();
}
inline const ::HttpMsg_Header& HttpMsg::headers(int index) const {
  // @@protoc_insertion_point(field_get:HttpMsg.headers)
  return headers_.Get(index);
}
inline ::HttpMsg_Header* HttpMsg::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:HttpMsg.headers)
  return headers_.Mutable(index);
}
inline ::HttpMsg_Header* HttpMsg::add_headers() {
  // @@protoc_insertion_point(field_add:HttpMsg.headers)
  return headers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::HttpMsg_Header >*
HttpMsg::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:HttpMsg.headers)
  return &headers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::HttpMsg_Header >&
HttpMsg::headers() const {
  // @@protoc_insertion_point(field_list:HttpMsg.headers)
  return headers_;
}

// optional bytes body = 10;
inline void HttpMsg::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg::body() const {
  // @@protoc_insertion_point(field_get:HttpMsg.body)
  return body_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.body)
}
inline void HttpMsg::set_body(const char* value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.body)
}
inline void HttpMsg::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.body)
}
inline ::std::string* HttpMsg::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg::release_body() {
  // @@protoc_insertion_point(field_release:HttpMsg.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.body)
}

// optional string path = 14;
inline void HttpMsg::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HttpMsg::path() const {
  // @@protoc_insertion_point(field_get:HttpMsg.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HttpMsg.path)
}
inline void HttpMsg::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HttpMsg.path)
}
inline void HttpMsg::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HttpMsg.path)
}
inline ::std::string* HttpMsg::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:HttpMsg.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HttpMsg::release_path() {
  // @@protoc_insertion_point(field_release:HttpMsg.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HttpMsg::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:HttpMsg.path)
}

// optional bool is_decoding = 15;
inline void HttpMsg::clear_is_decoding() {
  is_decoding_ = false;
}
inline bool HttpMsg::is_decoding() const {
  // @@protoc_insertion_point(field_get:HttpMsg.is_decoding)
  return is_decoding_;
}
inline void HttpMsg::set_is_decoding(bool value) {
  
  is_decoding_ = value;
  // @@protoc_insertion_point(field_set:HttpMsg.is_decoding)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_http_2eproto__INCLUDED
