// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: behaviourlog.proto

#ifndef PROTOBUF_behaviourlog_2eproto__INCLUDED
#define PROTOBUF_behaviourlog_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace BehaviourLog {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_behaviourlog_2eproto();
void protobuf_AssignDesc_behaviourlog_2eproto();
void protobuf_ShutdownFile_behaviourlog_2eproto();

class behaviour_log_ack;
class behaviour_log_req;

// ===================================================================

class behaviour_log_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BehaviourLog.behaviour_log_req) */ {
 public:
  behaviour_log_req();
  virtual ~behaviour_log_req();

  behaviour_log_req(const behaviour_log_req& from);

  inline behaviour_log_req& operator=(const behaviour_log_req& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const behaviour_log_req& default_instance();

  void Swap(behaviour_log_req* other);

  // implements Message ----------------------------------------------

  inline behaviour_log_req* New() const { return New(NULL); }

  behaviour_log_req* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const behaviour_log_req& from);
  void MergeFrom(const behaviour_log_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(behaviour_log_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 log_type = 1;
  void clear_log_type();
  static const int kLogTypeFieldNumber = 1;
  ::google::protobuf::uint32 log_type() const;
  void set_log_type(::google::protobuf::uint32 value);

  // optional bytes log_info = 2;
  void clear_log_info();
  static const int kLogInfoFieldNumber = 2;
  const ::std::string& log_info() const;
  void set_log_info(const ::std::string& value);
  void set_log_info(const char* value);
  void set_log_info(const void* value, size_t size);
  ::std::string* mutable_log_info();
  ::std::string* release_log_info();
  void set_allocated_log_info(::std::string* log_info);

  // @@protoc_insertion_point(class_scope:BehaviourLog.behaviour_log_req)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr log_info_;
  ::google::protobuf::uint32 log_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_behaviourlog_2eproto();
  friend void protobuf_AssignDesc_behaviourlog_2eproto();
  friend void protobuf_ShutdownFile_behaviourlog_2eproto();

  void InitAsDefaultInstance();
  static behaviour_log_req* default_instance_;
};
// -------------------------------------------------------------------

class behaviour_log_ack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BehaviourLog.behaviour_log_ack) */ {
 public:
  behaviour_log_ack();
  virtual ~behaviour_log_ack();

  behaviour_log_ack(const behaviour_log_ack& from);

  inline behaviour_log_ack& operator=(const behaviour_log_ack& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const behaviour_log_ack& default_instance();

  void Swap(behaviour_log_ack* other);

  // implements Message ----------------------------------------------

  inline behaviour_log_ack* New() const { return New(NULL); }

  behaviour_log_ack* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const behaviour_log_ack& from);
  void MergeFrom(const behaviour_log_ack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(behaviour_log_ack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 err_no = 1;
  void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  ::google::protobuf::int32 err_no() const;
  void set_err_no(::google::protobuf::int32 value);

  // optional bytes err_msg = 2;
  void clear_err_msg();
  static const int kErrMsgFieldNumber = 2;
  const ::std::string& err_msg() const;
  void set_err_msg(const ::std::string& value);
  void set_err_msg(const char* value);
  void set_err_msg(const void* value, size_t size);
  ::std::string* mutable_err_msg();
  ::std::string* release_err_msg();
  void set_allocated_err_msg(::std::string* err_msg);

  // @@protoc_insertion_point(class_scope:BehaviourLog.behaviour_log_ack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr err_msg_;
  ::google::protobuf::int32 err_no_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_behaviourlog_2eproto();
  friend void protobuf_AssignDesc_behaviourlog_2eproto();
  friend void protobuf_ShutdownFile_behaviourlog_2eproto();

  void InitAsDefaultInstance();
  static behaviour_log_ack* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// behaviour_log_req

// optional uint32 log_type = 1;
inline void behaviour_log_req::clear_log_type() {
  log_type_ = 0u;
}
inline ::google::protobuf::uint32 behaviour_log_req::log_type() const {
  // @@protoc_insertion_point(field_get:BehaviourLog.behaviour_log_req.log_type)
  return log_type_;
}
inline void behaviour_log_req::set_log_type(::google::protobuf::uint32 value) {
  
  log_type_ = value;
  // @@protoc_insertion_point(field_set:BehaviourLog.behaviour_log_req.log_type)
}

// optional bytes log_info = 2;
inline void behaviour_log_req::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& behaviour_log_req::log_info() const {
  // @@protoc_insertion_point(field_get:BehaviourLog.behaviour_log_req.log_info)
  return log_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void behaviour_log_req::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BehaviourLog.behaviour_log_req.log_info)
}
inline void behaviour_log_req::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BehaviourLog.behaviour_log_req.log_info)
}
inline void behaviour_log_req::set_log_info(const void* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BehaviourLog.behaviour_log_req.log_info)
}
inline ::std::string* behaviour_log_req::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:BehaviourLog.behaviour_log_req.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* behaviour_log_req::release_log_info() {
  // @@protoc_insertion_point(field_release:BehaviourLog.behaviour_log_req.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void behaviour_log_req::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:BehaviourLog.behaviour_log_req.log_info)
}

// -------------------------------------------------------------------

// behaviour_log_ack

// optional int32 err_no = 1;
inline void behaviour_log_ack::clear_err_no() {
  err_no_ = 0;
}
inline ::google::protobuf::int32 behaviour_log_ack::err_no() const {
  // @@protoc_insertion_point(field_get:BehaviourLog.behaviour_log_ack.err_no)
  return err_no_;
}
inline void behaviour_log_ack::set_err_no(::google::protobuf::int32 value) {
  
  err_no_ = value;
  // @@protoc_insertion_point(field_set:BehaviourLog.behaviour_log_ack.err_no)
}

// optional bytes err_msg = 2;
inline void behaviour_log_ack::clear_err_msg() {
  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& behaviour_log_ack::err_msg() const {
  // @@protoc_insertion_point(field_get:BehaviourLog.behaviour_log_ack.err_msg)
  return err_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void behaviour_log_ack::set_err_msg(const ::std::string& value) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BehaviourLog.behaviour_log_ack.err_msg)
}
inline void behaviour_log_ack::set_err_msg(const char* value) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BehaviourLog.behaviour_log_ack.err_msg)
}
inline void behaviour_log_ack::set_err_msg(const void* value, size_t size) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BehaviourLog.behaviour_log_ack.err_msg)
}
inline ::std::string* behaviour_log_ack::mutable_err_msg() {
  
  // @@protoc_insertion_point(field_mutable:BehaviourLog.behaviour_log_ack.err_msg)
  return err_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* behaviour_log_ack::release_err_msg() {
  // @@protoc_insertion_point(field_release:BehaviourLog.behaviour_log_ack.err_msg)
  
  return err_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void behaviour_log_ack::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg != NULL) {
    
  } else {
    
  }
  err_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err_msg);
  // @@protoc_insertion_point(field_set_allocated:BehaviourLog.behaviour_log_ack.err_msg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace BehaviourLog

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_behaviourlog_2eproto__INCLUDED
