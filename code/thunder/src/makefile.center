CC = gcc
CXX = g++
CFLAGS = -g -O0 #-Wall
CPPFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -fPIC -DNODE_BEAT=10.0 -Wno-deprecated-declarations
#CXXFLAG = -g -O2 -Wall -fdiagnostics-show-caret -Wextra -pedantic -Wstrict-aliasing -Wstrict-overflow -Woverloaded-virtual -Wold-style-cast -Wc++0x-compat -Wc++11-compat -Wundef -Wshadow -Wformat -Wsuggest-attribute=format -Wsuggest-attribute=noreturn -Wno-variadic-macros -fvisibility=hidden
CXXFLAG = -O0 -Wall -ggdb -m64 -Wl,--export-dynamic # -lrt -std=c++11 -pthread  #-static-libgcc -static-libstdc++

DEFINE_SERVER = -DNODE_TYPE_CENTER

ifeq ($(unit_test),y)
CPPFLAGS += -DUNIT_TEST
endif

ARCH:=$(shell uname -m)

ARCH32:=i686
ARCH64:=x86_64

ifeq ($(ARCH),$(ARCH64))
SYSTEM_LIB_PATH:=/usr/lib64
else
SYSTEM_LIB_PATH:=/usr/lib
endif

THUNDER_3LIB_PATH = ../../l3lib
THUNDER_LIB_PATH = ../../llib
THUNDER_PATH = ..

INC := $(INC) \
       -I $(THUNDER_3LIB_PATH)/include \
       -I $(THUNDER_3LIB_PATH)/include/mysql \
       -I $(THUNDER_3LIB_PATH)/include/libev \
       -I $(THUNDER_LIB_PATH)/src \
       -I $(THUNDER_PATH)/src \
       -I $(THUNDER_PATH)/

LDFLAGS := $(LDFLAGS) -D_LINUX_OS_ \
           -L$(SYSTEM_LIB_PATH) -lpthread \
           -L$(SYSTEM_LIB_PATH) -lz -lc -ldl -lrt -lssl \
           -L$(THUNDER_3LIB_PATH)/lib -lmysqlclient_r \
           -L$(THUNDER_3LIB_PATH)/lib -lhiredis \
           -L$(THUNDER_3LIB_PATH)/lib -lcryptopp \
           -L$(THUNDER_3LIB_PATH)/lib -lprotobuf \
           -L$(THUNDER_3LIB_PATH)/lib -llog4cplus \
           -L$(THUNDER_3LIB_PATH)/lib -lev \
           -L$(THUNDER_LIB_PATH)/lib -lllib

#执行文件
VPATH = $(THUNDER_PATH)/src
SUB_DIRS := $(foreach dir, $(VPATH), $(shell find $(dir) -maxdepth 5 -type d))
DIRS := $(SUB_DIRS)

CPP_SRCS = $(foreach dir, $(DIRS), $(wildcard $(dir)/*.cpp))
CC_SRCS = $(foreach dir, $(DIRS), $(wildcard $(dir)/*.cc))
C_SRCS = $(foreach dir, $(DIRS), $(wildcard $(dir)/*.c))
OBJS = $(patsubst %.cpp,%.o,$(CPP_SRCS)) $(patsubst %.c,%.o,$(C_SRCS)) $(patsubst %.cc,%.o,$(CC_SRCS))

COMPILE_TARGETS = CenterServer

all:$(COMPILE_TARGETS)

CenterServer:$(OBJS)
	$(CXX) $(CXXFLAG) $(UNITTEST) -o $@ $(OBJS) $(LDFLAGS) $(INC)

install: 
	#安装执行文件
	@for bin in $(COMPILE_TARGETS); do install -v $$bin ../../../deploy/bin/ ;done

%.o:%.cpp
	$(CXX) $(INC) $(CPPFLAGS) $(DEFINE_SERVER) $(CFLAGS) $(UNITTEST) -c -o $@ $< $(LDFLAGS)
%.o:%.cc
	$(CXX) $(INC) $(CPPFLAGS) $(UNITTEST) -c -o $@ $< $(LDFLAGS)
%.o:%.c
	$(CC) $(INC) $(CFLAGS) $(UNITTEST) -c -o $@ $< $(LDFLAGS)
clean:
	rm -f $(OBJS)
	rm -f $(TARGET)

