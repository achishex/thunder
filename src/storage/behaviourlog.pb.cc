// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: behaviourlog.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "behaviourlog.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace BehaviourLog {

namespace {

const ::google::protobuf::Descriptor* behaviour_log_req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  behaviour_log_req_reflection_ = NULL;
const ::google::protobuf::Descriptor* behaviour_log_ack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  behaviour_log_ack_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_behaviourlog_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_behaviourlog_2eproto() {
  protobuf_AddDesc_behaviourlog_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "behaviourlog.proto");
  GOOGLE_CHECK(file != NULL);
  behaviour_log_req_descriptor_ = file->message_type(0);
  static const int behaviour_log_req_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(behaviour_log_req, log_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(behaviour_log_req, log_info_),
  };
  behaviour_log_req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      behaviour_log_req_descriptor_,
      behaviour_log_req::default_instance_,
      behaviour_log_req_offsets_,
      -1,
      -1,
      -1,
      sizeof(behaviour_log_req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(behaviour_log_req, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(behaviour_log_req, _is_default_instance_));
  behaviour_log_ack_descriptor_ = file->message_type(1);
  static const int behaviour_log_ack_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(behaviour_log_ack, err_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(behaviour_log_ack, err_msg_),
  };
  behaviour_log_ack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      behaviour_log_ack_descriptor_,
      behaviour_log_ack::default_instance_,
      behaviour_log_ack_offsets_,
      -1,
      -1,
      -1,
      sizeof(behaviour_log_ack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(behaviour_log_ack, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(behaviour_log_ack, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_behaviourlog_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      behaviour_log_req_descriptor_, &behaviour_log_req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      behaviour_log_ack_descriptor_, &behaviour_log_ack::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_behaviourlog_2eproto() {
  delete behaviour_log_req::default_instance_;
  delete behaviour_log_req_reflection_;
  delete behaviour_log_ack::default_instance_;
  delete behaviour_log_ack_reflection_;
}

void protobuf_AddDesc_behaviourlog_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_behaviourlog_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022behaviourlog.proto\022\014BehaviourLog\"7\n\021be"
    "haviour_log_req\022\020\n\010log_type\030\001 \001(\r\022\020\n\010log"
    "_info\030\002 \001(\014\"4\n\021behaviour_log_ack\022\016\n\006err_"
    "no\030\001 \001(\005\022\017\n\007err_msg\030\002 \001(\014b\006proto3", 153);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "behaviourlog.proto", &protobuf_RegisterTypes);
  behaviour_log_req::default_instance_ = new behaviour_log_req();
  behaviour_log_ack::default_instance_ = new behaviour_log_ack();
  behaviour_log_req::default_instance_->InitAsDefaultInstance();
  behaviour_log_ack::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_behaviourlog_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_behaviourlog_2eproto {
  StaticDescriptorInitializer_behaviourlog_2eproto() {
    protobuf_AddDesc_behaviourlog_2eproto();
  }
} static_descriptor_initializer_behaviourlog_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int behaviour_log_req::kLogTypeFieldNumber;
const int behaviour_log_req::kLogInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

behaviour_log_req::behaviour_log_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BehaviourLog.behaviour_log_req)
}

void behaviour_log_req::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

behaviour_log_req::behaviour_log_req(const behaviour_log_req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BehaviourLog.behaviour_log_req)
}

void behaviour_log_req::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  log_type_ = 0u;
  log_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

behaviour_log_req::~behaviour_log_req() {
  // @@protoc_insertion_point(destructor:BehaviourLog.behaviour_log_req)
  SharedDtor();
}

void behaviour_log_req::SharedDtor() {
  log_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void behaviour_log_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* behaviour_log_req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return behaviour_log_req_descriptor_;
}

const behaviour_log_req& behaviour_log_req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_behaviourlog_2eproto();
  return *default_instance_;
}

behaviour_log_req* behaviour_log_req::default_instance_ = NULL;

behaviour_log_req* behaviour_log_req::New(::google::protobuf::Arena* arena) const {
  behaviour_log_req* n = new behaviour_log_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void behaviour_log_req::Clear() {
// @@protoc_insertion_point(message_clear_start:BehaviourLog.behaviour_log_req)
  log_type_ = 0u;
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool behaviour_log_req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BehaviourLog.behaviour_log_req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 log_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &log_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_log_info;
        break;
      }

      // optional bytes log_info = 2;
      case 2: {
        if (tag == 18) {
         parse_log_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_log_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BehaviourLog.behaviour_log_req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BehaviourLog.behaviour_log_req)
  return false;
#undef DO_
}

void behaviour_log_req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BehaviourLog.behaviour_log_req)
  // optional uint32 log_type = 1;
  if (this->log_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->log_type(), output);
  }

  // optional bytes log_info = 2;
  if (this->log_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->log_info(), output);
  }

  // @@protoc_insertion_point(serialize_end:BehaviourLog.behaviour_log_req)
}

::google::protobuf::uint8* behaviour_log_req::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BehaviourLog.behaviour_log_req)
  // optional uint32 log_type = 1;
  if (this->log_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->log_type(), target);
  }

  // optional bytes log_info = 2;
  if (this->log_info().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->log_info(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:BehaviourLog.behaviour_log_req)
  return target;
}

int behaviour_log_req::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:BehaviourLog.behaviour_log_req)
  int total_size = 0;

  // optional uint32 log_type = 1;
  if (this->log_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->log_type());
  }

  // optional bytes log_info = 2;
  if (this->log_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->log_info());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void behaviour_log_req::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BehaviourLog.behaviour_log_req)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const behaviour_log_req* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const behaviour_log_req>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BehaviourLog.behaviour_log_req)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BehaviourLog.behaviour_log_req)
    MergeFrom(*source);
  }
}

void behaviour_log_req::MergeFrom(const behaviour_log_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BehaviourLog.behaviour_log_req)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.log_type() != 0) {
    set_log_type(from.log_type());
  }
  if (from.log_info().size() > 0) {

    log_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_info_);
  }
}

void behaviour_log_req::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BehaviourLog.behaviour_log_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void behaviour_log_req::CopyFrom(const behaviour_log_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BehaviourLog.behaviour_log_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool behaviour_log_req::IsInitialized() const {

  return true;
}

void behaviour_log_req::Swap(behaviour_log_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void behaviour_log_req::InternalSwap(behaviour_log_req* other) {
  std::swap(log_type_, other->log_type_);
  log_info_.Swap(&other->log_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata behaviour_log_req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = behaviour_log_req_descriptor_;
  metadata.reflection = behaviour_log_req_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// behaviour_log_req

// optional uint32 log_type = 1;
void behaviour_log_req::clear_log_type() {
  log_type_ = 0u;
}
 ::google::protobuf::uint32 behaviour_log_req::log_type() const {
  // @@protoc_insertion_point(field_get:BehaviourLog.behaviour_log_req.log_type)
  return log_type_;
}
 void behaviour_log_req::set_log_type(::google::protobuf::uint32 value) {
  
  log_type_ = value;
  // @@protoc_insertion_point(field_set:BehaviourLog.behaviour_log_req.log_type)
}

// optional bytes log_info = 2;
void behaviour_log_req::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& behaviour_log_req::log_info() const {
  // @@protoc_insertion_point(field_get:BehaviourLog.behaviour_log_req.log_info)
  return log_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void behaviour_log_req::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BehaviourLog.behaviour_log_req.log_info)
}
 void behaviour_log_req::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BehaviourLog.behaviour_log_req.log_info)
}
 void behaviour_log_req::set_log_info(const void* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BehaviourLog.behaviour_log_req.log_info)
}
 ::std::string* behaviour_log_req::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:BehaviourLog.behaviour_log_req.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* behaviour_log_req::release_log_info() {
  // @@protoc_insertion_point(field_release:BehaviourLog.behaviour_log_req.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void behaviour_log_req::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:BehaviourLog.behaviour_log_req.log_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int behaviour_log_ack::kErrNoFieldNumber;
const int behaviour_log_ack::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

behaviour_log_ack::behaviour_log_ack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BehaviourLog.behaviour_log_ack)
}

void behaviour_log_ack::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

behaviour_log_ack::behaviour_log_ack(const behaviour_log_ack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BehaviourLog.behaviour_log_ack)
}

void behaviour_log_ack::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_no_ = 0;
  err_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

behaviour_log_ack::~behaviour_log_ack() {
  // @@protoc_insertion_point(destructor:BehaviourLog.behaviour_log_ack)
  SharedDtor();
}

void behaviour_log_ack::SharedDtor() {
  err_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void behaviour_log_ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* behaviour_log_ack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return behaviour_log_ack_descriptor_;
}

const behaviour_log_ack& behaviour_log_ack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_behaviourlog_2eproto();
  return *default_instance_;
}

behaviour_log_ack* behaviour_log_ack::default_instance_ = NULL;

behaviour_log_ack* behaviour_log_ack::New(::google::protobuf::Arena* arena) const {
  behaviour_log_ack* n = new behaviour_log_ack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void behaviour_log_ack::Clear() {
// @@protoc_insertion_point(message_clear_start:BehaviourLog.behaviour_log_ack)
  err_no_ = 0;
  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool behaviour_log_ack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BehaviourLog.behaviour_log_ack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 err_no = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_no_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err_msg;
        break;
      }

      // optional bytes err_msg = 2;
      case 2: {
        if (tag == 18) {
         parse_err_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BehaviourLog.behaviour_log_ack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BehaviourLog.behaviour_log_ack)
  return false;
#undef DO_
}

void behaviour_log_ack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BehaviourLog.behaviour_log_ack)
  // optional int32 err_no = 1;
  if (this->err_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err_no(), output);
  }

  // optional bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err_msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:BehaviourLog.behaviour_log_ack)
}

::google::protobuf::uint8* behaviour_log_ack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BehaviourLog.behaviour_log_ack)
  // optional int32 err_no = 1;
  if (this->err_no() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err_no(), target);
  }

  // optional bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err_msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:BehaviourLog.behaviour_log_ack)
  return target;
}

int behaviour_log_ack::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:BehaviourLog.behaviour_log_ack)
  int total_size = 0;

  // optional int32 err_no = 1;
  if (this->err_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_no());
  }

  // optional bytes err_msg = 2;
  if (this->err_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err_msg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void behaviour_log_ack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BehaviourLog.behaviour_log_ack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const behaviour_log_ack* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const behaviour_log_ack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BehaviourLog.behaviour_log_ack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BehaviourLog.behaviour_log_ack)
    MergeFrom(*source);
  }
}

void behaviour_log_ack::MergeFrom(const behaviour_log_ack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BehaviourLog.behaviour_log_ack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.err_no() != 0) {
    set_err_no(from.err_no());
  }
  if (from.err_msg().size() > 0) {

    err_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_msg_);
  }
}

void behaviour_log_ack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BehaviourLog.behaviour_log_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void behaviour_log_ack::CopyFrom(const behaviour_log_ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BehaviourLog.behaviour_log_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool behaviour_log_ack::IsInitialized() const {

  return true;
}

void behaviour_log_ack::Swap(behaviour_log_ack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void behaviour_log_ack::InternalSwap(behaviour_log_ack* other) {
  std::swap(err_no_, other->err_no_);
  err_msg_.Swap(&other->err_msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata behaviour_log_ack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = behaviour_log_ack_descriptor_;
  metadata.reflection = behaviour_log_ack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// behaviour_log_ack

// optional int32 err_no = 1;
void behaviour_log_ack::clear_err_no() {
  err_no_ = 0;
}
 ::google::protobuf::int32 behaviour_log_ack::err_no() const {
  // @@protoc_insertion_point(field_get:BehaviourLog.behaviour_log_ack.err_no)
  return err_no_;
}
 void behaviour_log_ack::set_err_no(::google::protobuf::int32 value) {
  
  err_no_ = value;
  // @@protoc_insertion_point(field_set:BehaviourLog.behaviour_log_ack.err_no)
}

// optional bytes err_msg = 2;
void behaviour_log_ack::clear_err_msg() {
  err_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& behaviour_log_ack::err_msg() const {
  // @@protoc_insertion_point(field_get:BehaviourLog.behaviour_log_ack.err_msg)
  return err_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void behaviour_log_ack::set_err_msg(const ::std::string& value) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BehaviourLog.behaviour_log_ack.err_msg)
}
 void behaviour_log_ack::set_err_msg(const char* value) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BehaviourLog.behaviour_log_ack.err_msg)
}
 void behaviour_log_ack::set_err_msg(const void* value, size_t size) {
  
  err_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BehaviourLog.behaviour_log_ack.err_msg)
}
 ::std::string* behaviour_log_ack::mutable_err_msg() {
  
  // @@protoc_insertion_point(field_mutable:BehaviourLog.behaviour_log_ack.err_msg)
  return err_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* behaviour_log_ack::release_err_msg() {
  // @@protoc_insertion_point(field_release:BehaviourLog.behaviour_log_ack.err_msg)
  
  return err_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void behaviour_log_ack::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg != NULL) {
    
  } else {
    
  }
  err_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err_msg);
  // @@protoc_insertion_point(field_set_allocated:BehaviourLog.behaviour_log_ack.err_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace BehaviourLog

// @@protoc_insertion_point(global_scope)
